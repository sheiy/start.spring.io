package {{package}}.exception.handler;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

@SuppressWarnings("unused")
public class ErrorResult {
    
    private static final Logger log = LoggerFactory.getLogger(ErrorResult.class);
    
    private String path;

    private Integer status;

    private String message;

    private String detail;

    private ErrorResult(HttpStatus status, String message, String detail) {
        this.status = status.value();
        this.message = message;
        this.detail = detail;
        try {
            final ServletRequestAttributes requestAttributes = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
            path = requestAttributes.getRequest().getRequestURI();
        } catch (Throwable e) {
            log.warn("获取requestURI异常", e);
        }
    }

    public static ResponseEntity<ErrorResult> of(String message) {
        return new ResponseEntity<>(new ErrorResult(HttpStatus.INTERNAL_SERVER_ERROR, message, null), HttpStatus.INTERNAL_SERVER_ERROR);
    }

    public static ResponseEntity<ErrorResult> of(String message, String detail) {
        return new ResponseEntity<>(new ErrorResult(HttpStatus.INTERNAL_SERVER_ERROR, message, detail), HttpStatus.INTERNAL_SERVER_ERROR);
    }

    public static ResponseEntity<ErrorResult> of(HttpStatus status, String message) {
        return new ResponseEntity<>(new ErrorResult(status, message, null), status);
    }

    public static ResponseEntity<ErrorResult> of(HttpStatus status, String message, String detail) {
        return new ResponseEntity<>(new ErrorResult(status, message, detail), status);
    }

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public String getDetail() {
        return detail;
    }

    public void setDetail(String detail) {
        this.detail = detail;
    }
}